/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.teamX.server;

import java.net.*;
import java.io.*;
import java.util.*;
import edu.duke.ece651.teamX.shared.*;

/**
 * This class represents the entry point for the game RISC.
 * The main function creates a server for the game, greets the user, and asks
 * how many players will be playing the game. From there, the server builds the
 * game, and the game is played.
 * The game has a server and a scanner to take in the amount of players
 */
public class App {

  Scanner scan = new Scanner(System.in);

  // string to greet the clients to the game
  static String GREETING = "WELCOME TO THE GAME OF RISC! Before we begin, we need some information to set up the game.";

  // string to get the number of players
  static String PLAYER_PROMPT = "How many players are playing? Our current system supports 2,3, and 4.\n";

  public App() {
  }

  /**
   * private helper function to get the amount of players playing in the game
   */
  private Integer welcomePhase() {
    Integer numPlayers;
    while (true) {
      System.out.println(PLAYER_PROMPT);
      try {
        numPlayers = Integer.parseInt(scan.nextLine());
      } catch (NumberFormatException e) {
        continue;
      }

      if (numPlayers < 2 || numPlayers > 4) {
        continue;
      }
      break;
    }

    return numPlayers;
  }

  /**
   * Create a RiscServer, take in the number of players, run the game
   */
  public static void main(String[] args) throws IOException {
    try {
    // create App
    App a = new App();
    Integer numPlayers;
    System.out.println("\n" + GREETING);
    numPlayers = a.welcomePhase();

    // create RiscServer
    System.out.println("\nBuilding the game...");
    System.out.println("Players can now connect to the game from their machines.\n");
    RiscServer rs = new RiscServer(numPlayers, new ServerSocket(5000));
    rs.run();
    } catch (IOException e) {
      return;
    }
  }
}
